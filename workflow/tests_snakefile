from snakemake.utils import min_version

min_version("6.15.3")

import pandas as pd
import yaml
import os.path
from os import path

configfile: "config/config.yaml"


# assign directory containing sequencing reads as specified in config.yaml
reads_dir = config["reads_dir"]

#for the quick-hacked typing of insertions -> statically defined variables
SAMPLES=config["SAMPLES"]
PAIRED=config["PAIRED"]
TE_TYPES=config["TE_types"]
INSERTION_TABLES_GRID=config["INSERTION_TABLES_GRID"]
INSERTION_TABLES_GENERIC=config["INSERTION_TABLES_GENERIC"]

#include: "rules/common_utils.smk"
#include: "rules/common.smk"
#include: "rules/ref_utils.smk"
#include: "rules/ref.smk"
#include: "rules/quality_control.smk"
#include: "rules/trimming.smk"
#include: "rules/mapping.smk"
#include: "rules/duplicate_removal.smk"
#include: "rules/indexes_bam2sam.smk"
#include: "rules/insertion_identification.smk"
#include: "rules/insertion_annotation.smk"
include: "rules/te_typing.smk"

#### ONLY FOR GRID DESIGN (STOCK MATRIX) BASED ANALYSIS ####
if config["approach"] == "GRID":
    rule all:
        input:
#            expand("results/te_typing/pre_sorting/{sample}/{paired}/{te_type}.txt", sample=SAMPLES, paired=PAIRED, te_type=TE_TYPES),
#            expand("results/te_typing/pre_sorting/{sample}/{sample}_te_types_merged.tsv", sample=SAMPLES, paired=PAIRED, te_type=TE_TYPES),
            #annotation with te type
#            expand("results/insertions_table_final_te_typed/headers_strand_1_uncategorized_{insertion_table}.csv", insertion_table=INSERTION_TABLES_GRID),
#            expand("results/insertions_table_final_te_typed/headers_strand_2_uncategorized_{insertion_table}.csv", insertion_table=INSERTION_TABLES_GRID),
            #after annotation
##            expand("results/te_typing/uncategorized/merged/{paired}/merged_{paired}_unc_{insertion_table}.fa.fai", insertion_table=INSERTION_TABLES_GRID, paired=PAIRED),
##            expand("results/te_typing/uncategorized/merged/merged_final_motifs_pos_header_{insertion_table}.fa", insertion_table=INSERTION_TABLES_GRID),
            expand("results/te_typing/uncategorized_clustered/final_clstr_file_{insertion_table}.tsv", insertion_table=INSERTION_TABLES_GRID),

if config["approach"] == "GENERIC":
    rule all:
        input:
            expand("results/te_typing/uncategorized_clustered/final_clstr_file_{insertion_table}.tsv", insertion_table=INSERTION_TABLES_GENERIC),
